<?xml version="1.0" encoding="UTF-8"?>
<bpmn:definitions xmlns:bpmn="http://www.omg.org/spec/BPMN/20100524/MODEL" xmlns:bpmndi="http://www.omg.org/spec/BPMN/20100524/DI" xmlns:dc="http://www.omg.org/spec/DD/20100524/DC" xmlns:camunda="http://camunda.org/schema/1.0/bpmn" xmlns:di="http://www.omg.org/spec/DD/20100524/DI" xmlns:modeler="http://camunda.org/schema/modeler/1.0" id="Definitions_0g1ndcb" targetNamespace="http://bpmn.io/schema/bpmn" exporter="Camunda Modeler" exporterVersion="4.11.1" modeler:executionPlatform="Camunda Platform" modeler:executionPlatformVersion="7.15.0">
    <bpmn:signal id="Signal_095mtow" name="done"/>
    <bpmn:signal id="Signal_0ct50ac" name="target_found"/>
    <bpmn:collaboration id="Collaboration_09ar16o">
        <bpmn:participant id="Participant_176by74" name="REX" processRef="Process_0izm18p"/>
    </bpmn:collaboration>
    <bpmn:process id="Process_0izm18p" isExecutable="true">
        <bpmn:dataObjectReference id="DataObjectReference_1tf3trm" name="map" dataObjectRef="DataObject_1jymjp7">
            <bpmn:extensionElements>
                <camunda:properties>
                    <camunda:property name="x_lower_boundary" value="0.0"/>
                    <camunda:property name="y_lower_boundary" value="0.0"/>
                    <camunda:property name="x_upper_boundary" value="1.0"/>
                    <camunda:property name="y_upper_boundary" value="1.5"/>
                </camunda:properties>
            </bpmn:extensionElements>
        </bpmn:dataObjectReference>
        <bpmn:dataObject id="DataObject_1jymjp7"/>
        <bpmn:endEvent id="Event_1uq7igu">
            <bpmn:incoming>Flow_09e39d8</bpmn:incoming>
        </bpmn:endEvent>
        <bpmn:sequenceFlow id="Flow_0bfkuhv" sourceRef="Exploring" targetRef="Event_done"/>
        <bpmn:sequenceFlow id="Flow_1" sourceRef="Event_09us1oq" targetRef="Exploring"/>
        <bpmn:sequenceFlow id="Flow_09e39d8" sourceRef="Event_done" targetRef="Event_1uq7igu"/>
        <bpmn:callActivity id="Exploring" name="Explore" calledElement="Explore">
            <bpmn:incoming>Flow_1</bpmn:incoming>
            <bpmn:outgoing>Flow_0bfkuhv</bpmn:outgoing>
            <bpmn:property id="Property_1qqj1fv" name="__targetRef_placeholder"/>
            <bpmn:dataInputAssociation id="DataInputAssociation_1yd13qb">
                <bpmn:sourceRef>DataObjectReference_1tf3trm</bpmn:sourceRef>
                <bpmn:targetRef>Property_1qqj1fv</bpmn:targetRef>
            </bpmn:dataInputAssociation>
        </bpmn:callActivity>
        <bpmn:startEvent id="Event_09us1oq">
            <bpmn:outgoing>Flow_1</bpmn:outgoing>
        </bpmn:startEvent>
        <bpmn:intermediateCatchEvent id="Event_done" name="done">
            <bpmn:extensionElements>
                <camunda:properties>
                    <camunda:property name="type" value="std_msgs/msg/Bool"/>
                </camunda:properties>
            </bpmn:extensionElements>
            <bpmn:incoming>Flow_0bfkuhv</bpmn:incoming>
            <bpmn:outgoing>Flow_09e39d8</bpmn:outgoing>
            <bpmn:signalEventDefinition id="SignalEventDefinition_0ce94et" signalRef="Signal_095mtow"/>
        </bpmn:intermediateCatchEvent>
    </bpmn:process>
    <bpmn:process id="Explore" name="Explore" isExecutable="false">
        <bpmn:startEvent id="StartExplore">
            <bpmn:outgoing>Flow_0qvju1w</bpmn:outgoing>
        </bpmn:startEvent>
        <bpmn:parallelGateway id="Gateway_and">
            <bpmn:incoming>Flow_0qvju1w</bpmn:incoming>
            <bpmn:outgoing>Flow_1or4btk</bpmn:outgoing>
            <bpmn:outgoing>Flow_0qinuho</bpmn:outgoing>
        </bpmn:parallelGateway>
        <bpmn:endEvent id="Event_End_detect">
            <bpmn:incoming>Flow_153rk4j</bpmn:incoming>
        </bpmn:endEvent>
        <bpmn:endEvent id="EndExplore">
            <bpmn:incoming>Flow_yes</bpmn:incoming>
            <bpmn:terminateEventDefinition id="TerminateEventDefinition_08rltx6"/>
        </bpmn:endEvent>
        <bpmn:sequenceFlow id="Flow_0or37rc" sourceRef="Gateway_0pccefu" targetRef="Gateway_19xzeks"/>
        <bpmn:sequenceFlow id="Flow_yes" name="yes" sourceRef="Gateway_1knonq6" targetRef="EndExplore">
            <bpmn:conditionExpression xsi:type="bpmn:tFormalExpression" language="JavaScript">next(null,this.environment.variables.map_points.length &lt;= 0);</bpmn:conditionExpression>
        </bpmn:sequenceFlow>
        <bpmn:sequenceFlow id="Flow_0qvju1w" sourceRef="StartExplore" targetRef="Gateway_and"/>
        <bpmn:sequenceFlow id="Flow_02svwnt" sourceRef="Activity_get_points" targetRef="Gateway_1knonq6"/>
        <bpmn:sequenceFlow id="Flow_0njshbn" sourceRef="Gateway_19xzeks" targetRef="Activity_get_points"/>
        <bpmn:sequenceFlow id="Flow_1jdjq4n" sourceRef="Activity_compute_points" targetRef="Gateway_19xzeks"/>
        <bpmn:sequenceFlow id="Flow_1or4btk" sourceRef="Gateway_and" targetRef="Activity_compute_points"/>
        <bpmn:sequenceFlow id="Flow_05oreus" sourceRef="Activity_goto" targetRef="Gateway_0pccefu"/>
        <bpmn:sequenceFlow id="Flow_no" name="no" sourceRef="Gateway_1knonq6" targetRef="Activity_goto">
            <bpmn:conditionExpression xsi:type="bpmn:tFormalExpression" language="JavaScript">
var variables = this.environment.variables;
this.environment.services.console.info("explore condition yes");
this.environment.services.console.info(variables);
next(null,this.environment.variables.map_points.length &gt; 0);
      </bpmn:conditionExpression>
        </bpmn:sequenceFlow>
        <bpmn:sequenceFlow id="Flow_0qinuho" sourceRef="Gateway_and" targetRef="Activity_Detecting"/>
        <bpmn:sequenceFlow id="Flow_153rk4j" sourceRef="Activity_Detecting" targetRef="Event_End_detect"/>
        <bpmn:exclusiveGateway id="Gateway_19xzeks">
            <bpmn:incoming>Flow_0or37rc</bpmn:incoming>
            <bpmn:incoming>Flow_1jdjq4n</bpmn:incoming>
            <bpmn:outgoing>Flow_0njshbn</bpmn:outgoing>
        </bpmn:exclusiveGateway>
        <bpmn:exclusiveGateway id="Gateway_1knonq6" name="all the area has been explored?">
            <bpmn:incoming>Flow_02svwnt</bpmn:incoming>
            <bpmn:outgoing>Flow_yes</bpmn:outgoing>
            <bpmn:outgoing>Flow_no</bpmn:outgoing>
        </bpmn:exclusiveGateway>
        <bpmn:exclusiveGateway id="Gateway_0pccefu">
            <bpmn:incoming>Flow_05oreus</bpmn:incoming>
            <bpmn:outgoing>Flow_0or37rc</bpmn:outgoing>
        </bpmn:exclusiveGateway>
        <bpmn:dataObjectReference id="DataObjectReference_0lgii7y" name="destination" dataObjectRef="DataObject_0z20p9v">
            <bpmn:extensionElements>
                <camunda:properties>
                    <camunda:property name="x_destination" value="${x_destination}"/>
                    <camunda:property name="y_destination" value="${y_destination}"/>
                </camunda:properties>
            </bpmn:extensionElements>
        </bpmn:dataObjectReference>
        <bpmn:dataObjectReference id="DataObjectReference_08n0h1d" name="map" dataObjectRef="DataObject_0pckxck">
            <bpmn:extensionElements>
                <camunda:properties>
                    <camunda:property name="x_lower_boundary" value="${x_lower_boundary}"/>
                    <camunda:property name="y_lower_boundary" value="${y_lower_boundary}"/>
                    <camunda:property name="x_upper_boundary" value="${x_upper_boundary}"/>
                    <camunda:property name="y_upper_boundary" value="${y_upper_boundary}"/>
                </camunda:properties>
            </bpmn:extensionElements>
        </bpmn:dataObjectReference>
        <bpmn:dataObject id="DataObject_0z20p9v"/>
        <bpmn:dataObject id="DataObject_0pckxck"/>
        <bpmn:scriptTask id="Activity_get_points" name="Get Point" scriptFormat="JavaScript">
            <bpmn:incoming>Flow_0njshbn</bpmn:incoming>
            <bpmn:outgoing>Flow_02svwnt</bpmn:outgoing>
            <bpmn:dataOutputAssociation id="DataOutputAssociation_1bj3wv3">
                <bpmn:targetRef>DataObjectReference_0lgii7y</bpmn:targetRef>
            </bpmn:dataOutputAssociation>
            <bpmn:script>
var variables = this.environment.variables;
this.environment.services.console.info("explore");
this.environment.services.console.info(variables);

var points = variables.map_points;
var destination = points.shift();
this.environment.variables.x_destination = destination.x;
this.environment.variables.y_destination = destination.y;
this.environment.variables.z_destination = 0.0;
next();</bpmn:script>
        </bpmn:scriptTask>
        <bpmn:scriptTask id="Activity_compute_points" name="Compute Points" scriptFormat="JavaScript">
            <bpmn:incoming>Flow_1or4btk</bpmn:incoming>
            <bpmn:outgoing>Flow_1jdjq4n</bpmn:outgoing>
            <bpmn:property id="Property_0kwd6af" name="__targetRef_placeholder"/>
            <bpmn:dataInputAssociation id="DataInputAssociation_1naqiot">
                <bpmn:sourceRef>DataObjectReference_08n0h1d</bpmn:sourceRef>
                <bpmn:targetRef>Property_0kwd6af</bpmn:targetRef>
            </bpmn:dataInputAssociation>
            <bpmn:script>
var variables = this.environment.variables;
var x_low = parseFloat(variables.x_lower_boundary);
var y_low = parseFloat(variables.y_lower_boundary);
var x_up = parseFloat(variables.x_upper_boundary);
var y_up = parseFloat(variables.y_upper_boundary);

var distance_range = 0.4;
var max_x = (x_up - x_low) / distance_range;
var max_y = (y_up - y_low ) / distance_range;

var points = new Array();
var x_val = x_low;
var y_val = y_low;

points.push({x: x_low, y: y_low});
for (let i = 0; i &lt;= parseInt(max_x); i++){   
    for(let j = 0; j &lt;= parseInt(max_y); j++){
        y_val += 0.4;
        points.push({x: x_val, y: y_val});
    }
    x_val += 0.4;
    y_val = y_low;
}

points.push({x: x_up, y: y_up});

this.environment.variables.map_points = points;

next();</bpmn:script>
        </bpmn:scriptTask>
        <bpmn:callActivity id="Activity_goto" name="GoTo" calledElement="GoTo">
            <bpmn:incoming>Flow_no</bpmn:incoming>
            <bpmn:outgoing>Flow_05oreus</bpmn:outgoing>
            <bpmn:property id="Property_1g0nqea" name="__targetRef_placeholder"/>
            <bpmn:dataInputAssociation id="DataInputAssociation_1tazkqb">
                <bpmn:sourceRef>DataObjectReference_0lgii7y</bpmn:sourceRef>
                <bpmn:targetRef>Property_1g0nqea</bpmn:targetRef>
            </bpmn:dataInputAssociation>
        </bpmn:callActivity>
        <bpmn:callActivity id="Activity_Detecting" name="Detect" calledElement="Detect">
            <bpmn:incoming>Flow_0qinuho</bpmn:incoming>
            <bpmn:outgoing>Flow_153rk4j</bpmn:outgoing>
        </bpmn:callActivity>
    </bpmn:process>
    <bpmn:process id="GoTo" name="GoTo" isExecutable="false">
        <bpmn:dataObjectReference id="DataObjectReference_1nonjc0" name="destination" dataObjectRef="DataObject_1s3e753">
            <bpmn:extensionElements>
                <camunda:properties>
                    <camunda:property name="x_destination" value="${x_target}"/>
                    <camunda:property name="y_destination" value="${y_target}"/>
                    <camunda:property name="z_destination" value="0"/>
                </camunda:properties>
            </bpmn:extensionElements>
        </bpmn:dataObjectReference>
        <bpmn:dataObject id="DataObject_1s3e753"/>
        <bpmn:sequenceFlow id="Flow_0kxnn19" sourceRef="startGT" targetRef="Activity_nav"/>
        <bpmn:sequenceFlow id="Flow_1jq1lqv" sourceRef="Gateway_1ue7cz5" targetRef="Event_1xbput1"/>
        <bpmn:sequenceFlow id="Flow_0tdb7pt" sourceRef="Activity_nav" targetRef="Gateway_1ue7cz5"/>
        <bpmn:sequenceFlow id="Flow_0k4zm40" sourceRef="Activity_0zdm893" targetRef="Event_end_goto"/>
        <bpmn:sequenceFlow id="Flow_not_reached" name="no" sourceRef="Gateway_0mn0474" targetRef="Gateway_1ue7cz5">
            <bpmn:conditionExpression xsi:type="bpmn:tFormalExpression" language="JavaScript">next(null,!this.environment.variables.reached);</bpmn:conditionExpression>
        </bpmn:sequenceFlow>
        <bpmn:sequenceFlow id="Flow_reached" name="yes" sourceRef="Gateway_0mn0474" targetRef="Activity_0zdm893">
            <bpmn:conditionExpression xsi:type="bpmn:tFormalExpression" language="JavaScript">next(null,this.environment.variables.reached);</bpmn:conditionExpression>
        </bpmn:sequenceFlow>
        <bpmn:sequenceFlow id="Flow_1thqc8o" sourceRef="Event_1xbput1" targetRef="Activity_1gbttx6"/>
        <bpmn:sequenceFlow id="Flow_1tir7h3" sourceRef="Activity_1gbttx6" targetRef="Gateway_0mn0474"/>
        <bpmn:endEvent id="Event_end_goto">
            <bpmn:incoming>Flow_0k4zm40</bpmn:incoming>
        </bpmn:endEvent>
        <bpmn:scriptTask id="Activity_0zdm893" name="Stop" scriptFormat="JavaScript">
            <bpmn:incoming>Flow_reached</bpmn:incoming>
            <bpmn:outgoing>Flow_0k4zm40</bpmn:outgoing>
            <bpmn:script>
var vars = this.environment.variables;
var node = vars.ros_node;
//var log = this.environment.services.console.info;
//log(vars);

const publisher = node.createPublisher("geometry_msgs/msg/Twist", "cmd_vel");
publisher.publish({
    linear: {x: 0.0, y: 0.0, z: 0.0},
    angular: {x: 0.0, y: 0.0, z: 0.0}
});

this.environment.services.console.info("robot is stopping !!!");

next();</bpmn:script>
        </bpmn:scriptTask>
        <bpmn:scriptTask id="Activity_nav" name="Navigate" scriptFormat="JavaScript">
            <bpmn:incoming>Flow_0kxnn19</bpmn:incoming>
            <bpmn:outgoing>Flow_0tdb7pt</bpmn:outgoing>
            <bpmn:property id="Property_1b1iiby" name="__targetRef_placeholder"/>
            <bpmn:dataInputAssociation id="DataInputAssociation_05dtzy6">
                <bpmn:sourceRef>DataObjectReference_1nonjc0</bpmn:sourceRef>
                <bpmn:targetRef>Property_1b1iiby</bpmn:targetRef>
            </bpmn:dataInputAssociation>
            <bpmn:script>
var vars = this.environment.variables;
var node = vars.ros_node;
var log = this.environment.services.console.info;
log(vars);


/*
const publisher = node.createPublisher("geometry_msgs/msg/Twist", "cmd_vel");
//this.environment.services.console.info(this);
//this.logger.debug(this); //does not work
//this.environment.services.console.info(vars.x_destination, vars.y_destination);


function quaternionToYaw({x, y, z, w}) {
    return Math.atan2(2 * (w * z + x * y), 1 - 2 * (y * y + z * z));
}

var vars = this.environment.variables;
var node = vars.ros_node;
const subscriber = node.createSubscription("nav_msgs/msg/Odometry", "odom", (msg) =&gt; {
    this.environment.variables.my_x = msg.pose.pose.position.x;
    this.environment.variables.my_y = msg.pose.pose.position.y;
    this.environment.variables.my_z = msg.pose.pose.position.z;

    const yaw = quaternionToYaw(msg.pose.pose.orientation);
    this.environment.variables.yaw = yaw;          // rad
    this.environment.services.console.info(yaw);
            
    this.environment.services.console.info(this.environment.variables);

    publisher.publish({
        //linear: {x: vars.x_destination - vars.my_x, y: vars.y_destination - vars.my_y, z: 0.0},
        linear: {x: 0.0 + vars.my_x/10.0, y: 0.0 + vars.my_y/10.0, z: 0.0},
        angular: {x: 0.1, y: 0.1, z: 0.1}
    });
    node.destroySubscription(subscriber);
});
this.environment.services.console.info(vars);
*/



// simple_goto.js

function quaternionToYaw(q) {
  return Math.atan2(2 * (q.w * q.z + q.x * q.y),
                    1 - 2 * (q.y * q.y + q.z * q.z));
}

// ------------------------------------------------------------------
// Paramètres - adaptez-les éventuellement via process.env ou params ROS
// ------------------------------------------------------------------
/*
const vars.goal = {
  x: parseFloat(vars.x_destination ?? 1.0),
  y: parseFloat(vars.y_destination ?? 1.0)
};
*/


vars.goal = {
  x: 4.7,
  y: 1
};

const KP_LIN  = 0.6;   // gain linéaire
const KP_ANG  = 1.5;   // gain angulaire
const MAX_LIN = 0.22;  // m/s  (sécurité : TurtleBot 3)
const MAX_ANG = 2.0;   // rad/s
const TOL_DIST = 0.01; // m  - distance cible
const LOOP_HZ = 1;    // fréquence boucle contrôle

// ------------------------------------------------------------------
// Node principal
// ------------------------------------------------------------------

// éditeur /cmd_vel
const cmdPub = node.createPublisher(
    "geometry_msgs/msg/Twist",
    "cmd_vel"
);

// état actuel du robot
const pose = { x: 0, y: 0, yaw: 0 };

// abonnement odom
const subscriber = node.createSubscription(
    "nav_msgs/msg/Odometry",
    "odom",
    (msg) =&gt; {
        pose.x   = msg.pose.pose.position.x;
        pose.y   = msg.pose.pose.position.y;
        pose.yaw = quaternionToYaw(msg.pose.pose.orientation);
        //node.destroySubscription(subscriber); // TODO: wtf is that behavior ????
    }
);

// boucle de contrôle à LOOP_HZ
vars.looptime = node.createTimer(1000 / LOOP_HZ, () =&gt; {
    const dx = vars.goal.x - pose.x;
    const dy = vars.goal.y - pose.y;
    const dist = Math.hypot(dx, dy);

    // Arrivé then stop et quitter si on veut
    if (dist &lt; TOL_DIST) {
        cmdPub.publish({linear: {x:0,y:0,z:0}, angular:{x:0,y:0,z:0}});
        return;
    }

    // orientation désirée et erreur angulaire ramenée à [-π, π]
    const targetYaw = Math.atan2(dy, dx);
    let angErr = targetYaw - pose.yaw;
    angErr = Math.atan2(Math.sin(angErr), Math.cos(angErr)); // wrap

    // commandes proportionnelles + saturation
    const v  = Math.min(KP_LIN * dist, MAX_LIN);
    const wz = Math.max(-MAX_ANG, Math.min(KP_ANG * angErr, MAX_ANG));

    cmdPub.publish({
        linear:  { x: v, y: 0.0, z: 0.0 },
        angular: { x: 0.0, y: 0.0, z: wz }
    });

    //this.environment.services.console.info(vars);
    //this.environment.services.console.info(pose, v, wz, targetYaw, angErr, dx, dy, dist, vars.goal);
});


next();</bpmn:script>
        </bpmn:scriptTask>
        <bpmn:scriptTask id="Activity_1gbttx6" name="Check Position" scriptFormat="JavaScript">
            <bpmn:incoming>Flow_1thqc8o</bpmn:incoming>
            <bpmn:outgoing>Flow_1tir7h3</bpmn:outgoing>
            <bpmn:script>
var vars = this.environment.variables;
var node = vars.ros_node;
var console = this.environment.services.console;
const subscriber = node.createSubscription("nav_msgs/msg/Odometry", "odom", (msg) =&gt; {
    var x = msg.pose.pose.position.x;
    var y = msg.pose.pose.position.y;
    var z = msg.pose.pose.position.z;
    this.environment.variables.my_x = x;
    this.environment.variables.my_y = y;
    this.environment.variables.my_z = z;
    this.environment.variables.reached = false;
    //this.environment.services.console.info("trying to see if my robot is done working to get to the point or if he is lazy");
    //if ((vars.x_target &gt;= x - 0.2 &amp;&amp; vars.x_target &lt;= x + 0.2) &amp;&amp; (vars.y_target &gt;= y - 0.2 &amp;&amp; vars.y_target &lt;=y + 0.2)){
    if ((vars.goal.x &gt;= x - 0.2 &amp;&amp; vars.goal.x &lt;= x + 0.2) &amp;&amp; (vars.goal.y &gt;= y - 0.2 &amp;&amp; vars.goal.y &lt;=y + 0.2)){
        this.environment.variables.reached = true;
        node.destroyTimer(vars.looptime);
        console.info("my robot is done working to get to the point : {x: "+x+", y: "+y+", z: "+z+"}");
        node.destroySubscription(subscriber);
        
    }
});
next();</bpmn:script>
        </bpmn:scriptTask>
        <bpmn:startEvent id="startGT">
            <bpmn:outgoing>Flow_0kxnn19</bpmn:outgoing>
        </bpmn:startEvent>
        <bpmn:exclusiveGateway id="Gateway_1ue7cz5">
            <bpmn:incoming>Flow_0tdb7pt</bpmn:incoming>
            <bpmn:incoming>Flow_not_reached</bpmn:incoming>
            <bpmn:outgoing>Flow_1jq1lqv</bpmn:outgoing>
        </bpmn:exclusiveGateway>
        <bpmn:exclusiveGateway id="Gateway_0mn0474" name="destination reached?">
            <bpmn:incoming>Flow_1tir7h3</bpmn:incoming>
            <bpmn:outgoing>Flow_not_reached</bpmn:outgoing>
            <bpmn:outgoing>Flow_reached</bpmn:outgoing>
        </bpmn:exclusiveGateway>
        <bpmn:intermediateCatchEvent id="Event_1xbput1" name="wait2sec">
            <bpmn:incoming>Flow_1jq1lqv</bpmn:incoming>
            <bpmn:outgoing>Flow_1thqc8o</bpmn:outgoing>
            <bpmn:timerEventDefinition id="TimerEventDefinition_1cocva0">
                <bpmn:timeDuration xsi:type="bpmn:tFormalExpression">PT2S</bpmn:timeDuration>
            </bpmn:timerEventDefinition>
        </bpmn:intermediateCatchEvent>
    </bpmn:process>
    <bpmn:process id="Detect" name="Detect" isExecutable="false">
        <bpmn:startEvent id="Start_detection">
            <bpmn:outgoing>Flow_0z74301</bpmn:outgoing>
        </bpmn:startEvent>
        <bpmn:exclusiveGateway id="Gateway_0m4kc84" name="target identified?">
            <bpmn:incoming>Flow_1bj3fcx</bpmn:incoming>
            <bpmn:outgoing>Flow_0ur818s</bpmn:outgoing>
            <bpmn:outgoing>Flow_1wp9idi</bpmn:outgoing>
        </bpmn:exclusiveGateway>
        <bpmn:exclusiveGateway id="Gateway_04cev4r">
            <bpmn:incoming>Flow_0z74301</bpmn:incoming>
            <bpmn:incoming>Flow_1uthquc</bpmn:incoming>
            <bpmn:outgoing>Flow_1gn3ek2</bpmn:outgoing>
        </bpmn:exclusiveGateway>
        <bpmn:scriptTask id="Activity_01ld906" name="Activate Sensor" scriptFormat="JavaScript">
            <bpmn:incoming>Flow_1gn3ek2</bpmn:incoming>
            <bpmn:outgoing>Flow_1ocfwwu</bpmn:outgoing>
            <bpmn:script>const node_env = this.environment.variables;
var node = node_env.ros_node;
const rsub = node.createSubscription("sensor_msgs/msg/Range", "range", (msg) =&gt; {
    this.environment.variables.sensor_data = msg.range;
    node.destroySubscription(rsub);
});
next();</bpmn:script>
        </bpmn:scriptTask>
        <bpmn:scriptTask id="Activity_check_target" name="Identify Target" scriptFormat="JavaScript">
            <bpmn:incoming>Flow_1ocfwwu</bpmn:incoming>
            <bpmn:outgoing>Flow_1bj3fcx</bpmn:outgoing>
            <bpmn:script>const vars = this.environment.variables;
const range = vars.sensor_data;
this.environment.variables.is_target = false;
const node_env = this.environment.variables;
var node = node_env.ros_node;
const subscriber = node.createSubscription("nav_msgs/msg/Odometry", "odom", (msg) =&gt; {
    this.environment.variables.my_x = msg.pose.pose.position.x;
    this.environment.variables.my_y = msg.pose.pose.position.y;
    this.environment.variables.my_z = msg.pose.pose.position.z;
    node.destroySubscription(subscriber);
});
if (range &lt; 1.4) {
    this.environment.variables.is_target = true;
    this.environment.variables.x_target = this.environment.variables.my_x;
    this.environment.variables.y_target = this.environment.variables.my_y;
    this.environment.variables.z_target = 0.0;
}
next();</bpmn:script>
        </bpmn:scriptTask>
        <bpmn:sequenceFlow id="Flow_1ocfwwu" sourceRef="Activity_01ld906" targetRef="Activity_check_target"/>
        <bpmn:sequenceFlow id="Flow_1bj3fcx" sourceRef="Activity_check_target" targetRef="Gateway_0m4kc84"/>
        <bpmn:sequenceFlow id="Flow_1gn3ek2" sourceRef="Gateway_04cev4r" targetRef="Activity_01ld906"/>
        <bpmn:sequenceFlow id="Flow_0ur818s" name="no" sourceRef="Gateway_0m4kc84" targetRef="Event_timer2s">
            <bpmn:conditionExpression xsi:type="bpmn:tFormalExpression" language="JavaScript">next(null, !this.environment.variables.is_target);</bpmn:conditionExpression>
        </bpmn:sequenceFlow>
        <bpmn:sequenceFlow id="Flow_0z74301" sourceRef="Start_detection" targetRef="Gateway_04cev4r"/>
        <bpmn:sequenceFlow id="Flow_1uthquc" sourceRef="Event_timer2s" targetRef="Gateway_04cev4r"/>
        <bpmn:sequenceFlow id="Flow_1wp9idi" name="yes" sourceRef="Gateway_0m4kc84" targetRef="EndThrow_target_found">
            <bpmn:conditionExpression xsi:type="bpmn:tFormalExpression" language="JavaScript">next(null, this.environment.variables.is_target);</bpmn:conditionExpression>
        </bpmn:sequenceFlow>
        <bpmn:intermediateCatchEvent id="Event_timer2s">
            <bpmn:incoming>Flow_0ur818s</bpmn:incoming>
            <bpmn:outgoing>Flow_1uthquc</bpmn:outgoing>
            <bpmn:timerEventDefinition id="TimerEventDefinition_1r5y80o">
                <bpmn:timeDuration xsi:type="bpmn:tFormalExpression">PT2S</bpmn:timeDuration>
            </bpmn:timerEventDefinition>
        </bpmn:intermediateCatchEvent>
        <bpmn:endEvent id="EndThrow_target_found" name="target_found">
            <bpmn:extensionElements>
                <camunda:properties>
                    <camunda:property name="type" value="geometry_msgs/msg/Vector3"/>
                    <camunda:property name="payload" value="{&quot;x&quot;: ${x_target}, &quot;y&quot;: ${y_target}, &quot;z&quot;: ${z_target}}"/>
                </camunda:properties>
            </bpmn:extensionElements>
            <bpmn:incoming>Flow_1wp9idi</bpmn:incoming>
            <bpmn:signalEventDefinition id="SignalEventDefinition_1ptwlcg" signalRef="Signal_1j8ltra"/>
        </bpmn:endEvent>
    </bpmn:process>
    <bpmndi:BPMNDiagram id="BPMNDiagram_1">
        <bpmndi:BPMNPlane id="BPMNPlane_1" bpmnElement="Collaboration_09ar16o">
            <bpmndi:BPMNShape id="Participant_176by74_di" bpmnElement="Participant_176by74" isHorizontal="true">
                <dc:Bounds x="140" y="80" width="570" height="200"/>
            </bpmndi:BPMNShape>
            <bpmndi:BPMNShape id="DataObjectReference_1tf3trm_di" bpmnElement="DataObjectReference_1tf3trm">
                <dc:Bounds x="272" y="95" width="36" height="50"/>
                <bpmndi:BPMNLabel>
                    <dc:Bounds x="279" y="152" width="22" height="14"/>
                </bpmndi:BPMNLabel>
            </bpmndi:BPMNShape>
            <bpmndi:BPMNShape id="Event_1uq7igu_di" bpmnElement="Event_1uq7igu">
                <dc:Bounds x="632" y="172" width="36" height="36"/>
            </bpmndi:BPMNShape>
            <bpmndi:BPMNShape id="Activity_0lsxwpo_di" bpmnElement="Exploring">
                <dc:Bounds x="360" y="150" width="100" height="80"/>
            </bpmndi:BPMNShape>
            <bpmndi:BPMNShape id="Event_09us1oq_di" bpmnElement="Event_09us1oq">
                <dc:Bounds x="222" y="172" width="36" height="36"/>
            </bpmndi:BPMNShape>
            <bpmndi:BPMNShape id="Event_1s4w8r2_di" bpmnElement="Event_done">
                <dc:Bounds x="532" y="172" width="36" height="36"/>
                <bpmndi:BPMNLabel>
                    <dc:Bounds x="538" y="215" width="25" height="14"/>
                </bpmndi:BPMNLabel>
            </bpmndi:BPMNShape>
            <bpmndi:BPMNEdge id="Flow_09e39d8_di" bpmnElement="Flow_09e39d8">
                <di:waypoint x="568" y="190"/>
                <di:waypoint x="632" y="190"/>
            </bpmndi:BPMNEdge>
            <bpmndi:BPMNEdge id="Flow_1wiqf22_di" bpmnElement="Flow_1">
                <di:waypoint x="258" y="190"/>
                <di:waypoint x="360" y="190"/>
            </bpmndi:BPMNEdge>
            <bpmndi:BPMNEdge id="Flow_0bfkuhv_di" bpmnElement="Flow_0bfkuhv">
                <di:waypoint x="460" y="190"/>
                <di:waypoint x="532" y="190"/>
            </bpmndi:BPMNEdge>
            <bpmndi:BPMNEdge id="DataInputAssociation_1yd13qb_di" bpmnElement="DataInputAssociation_1yd13qb">
                <di:waypoint x="308" y="120"/>
                <di:waypoint x="410" y="120"/>
                <di:waypoint x="410" y="150"/>
            </bpmndi:BPMNEdge>
        </bpmndi:BPMNPlane>
    </bpmndi:BPMNDiagram>
</bpmn:definitions>